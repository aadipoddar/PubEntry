@page "/"
@rendermode InteractiveServer
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@inject Microsoft.JSInterop.IJSRuntime JS
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnvironment

<PageTitle>Pub Reports</PageTitle>

<div class="container">
	<div class="container-bottom">
		<SfDateTimePicker TValue="DateTime" Placeholder="From Date Time" Value="@FromDateTime" Max="@ToDateTime">
			<DateTimePickerEvents TValue="DateTime" ValueChange="OnFromValueChanged"></DateTimePickerEvents>
		</SfDateTimePicker>
		<SfDateTimePicker TValue="DateTime" Placeholder="To Date Time" Value="@ToDateTime" Min="@FromDateTime">
			<DateTimePickerEvents TValue="DateTime" ValueChange="OnToValueChanged"></DateTimePickerEvents>
		</SfDateTimePicker>
	</div>

	<SfAccordion ExpandMode="ExpandMode.Single">
		<AccordionItems>
			@foreach (var location in locations)
			{
				<AccordionItem>
					<HeaderTemplate>
						<label>@location.Name</label>
						<button class="btn btn-primary" type="button" @onclick="() => OnDetailedClick(location.Id)">Detailed</button>
					</HeaderTemplate>
					<ContentTemplate>
						<div class="accordion-content">
							<!-- First Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Total People</label>
									<input type="number" value="@((transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Male ?? 0) + (transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Female ?? 0))" readonly />
								</div>
								<div class="form-group">
									<label>Total Amount</label>
									<input type="number" value="@((transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Cash ?? 0) + (transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Card ?? 0) + (transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.UPI ?? 0) + (transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Amex ?? 0))" readonly />
								</div>
							</div>

							<!-- Second Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Male</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Male ?? 0)" readonly />
								</div>
								<div class="form-group">
									<label>Cash</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Cash ?? 0)" readonly />
								</div>
							</div>

							<!-- Third Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Female</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Female ?? 0)" readonly />
								</div>
								<div class="form-group">
									<label>Card</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Card ?? 0)" readonly />
								</div>
							</div>

							<!-- Fourth Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Total Loyalty</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Loyalty ?? 0)" readonly />
								</div>
								<div class="form-group">
									<label>UPI</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.UPI ?? 0)" readonly />
								</div>
							</div>

							<!-- Fifth Row (Amex on right) -->
							<div class="form-row">
								<div class="form-group">
									<!-- Empty spacer -->
								</div>
								<div class="form-group">
									<label>Amex</label>
									<input type="number" value="@(transactionTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.Amex ?? 0)" readonly />
								</div>
							</div>

							<!-- Sixth Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Total Advance</label>
									<input type="number" value="@(advanceTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.TotalAdvance ?? 0)" readonly />
								</div>
								<div class="form-group">
									<label>Total Booking</label>
									<input type="number" value="@(advanceTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.TotalBooking ?? 0)" readonly />
								</div>
							</div>

							<!-- Seventh Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Redeemed</label>
									<input type="number" value="@(advanceTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.RedeemedAdvance ?? 0)" readonly />
								</div>
								<div class="form-group">
									<label>Redeemed</label>
									<input type="number" value="@(advanceTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.RedeemedBooking ?? 0)" readonly />
								</div>
							</div>

							<!-- Eighth Row -->
							<div class="form-row">
								<div class="form-group">
									<label>Not Redeemed</label>
									<input type="number" value="@(advanceTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.NotRedeemedAdvance ?? 0)" readonly />
								</div>
								<div class="form-group">
									<label>Not Redeemed</label>
									<input type="number" value="@(advanceTotalsModel.FirstOrDefault(_ => _.LocationId == location.Id)?.NotRedeemedBooking ?? 0)" readonly />
								</div>
							</div>
						</div>
					</ContentTemplate>
				</AccordionItem>
			}
		</AccordionItems>
	</SfAccordion>

	<SfAccordion>
		<AccordionItems>
			<AccordionItem Header="Grand Total">
				<ContentTemplate>
					<div class="accordion-content">
						<!-- First Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Total People</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Male + _.Female) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>Total Amount</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Cash + _.Card + _.UPI + _.Amex) ?? 0)" readonly />
							</div>
						</div>

						<!-- Second Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Male</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Male) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>Cash</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Cash) ?? 0)" readonly />
							</div>
						</div>

						<!-- Third Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Female</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Female) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>Card</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Card) ?? 0)" readonly />
							</div>
						</div>

						<!-- Fourth Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Total Loyalty</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Loyalty) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>UPI</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.UPI) ?? 0)" readonly />
							</div>
						</div>

						<!-- Fifth Row (Amex on right) -->
						<div class="form-row">
							<div class="form-group">
								<!-- Empty spacer -->
							</div>
							<div class="form-group">
								<label>Amex</label>
								<input type="number" value="@(transactionTotalsModel?.Sum(_ => _.Amex) ?? 0)" readonly />
							</div>
						</div>

						<!-- Sixth Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Total Advance</label>
								<input type="number" value="@(advanceTotalsModel?.Sum(_ => _.TotalAdvance) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>Total Booking</label>
								<input type="number" value="@(advanceTotalsModel?.Sum(_ => _.TotalBooking) ?? 0)" readonly />
							</div>
						</div>

						<!-- Seventh Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Redeemed</label>
								<input type="number" value="@(advanceTotalsModel?.Sum(_ => _.RedeemedAdvance) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>Redeemed</label>
								<input type="number" value="@(advanceTotalsModel?.Sum(_ => _.RedeemedBooking) ?? 0)" readonly />
							</div>
						</div>

						<!-- Eighth Row -->
						<div class="form-row">
							<div class="form-group">
								<label>Not Redeemed</label>
								<input type="number" value="@(advanceTotalsModel?.Sum(_ => _.NotRedeemedAdvance) ?? 0)" readonly />
							</div>
							<div class="form-group">
								<label>Not Redeemed</label>
								<input type="number" value="@(advanceTotalsModel?.Sum(_ => _.NotRedeemedBooking) ?? 0)" readonly />
							</div>
						</div>
					</div>
				</ContentTemplate>
			</AccordionItem>
		</AccordionItems>
	</SfAccordion>

	<div class="container-bottom">
		<button class="btn btn-primary" type="button" @onclick="SummaryButtonClicked">Summary Report</button>

		<select class="form-select-sm" name="locationSelect" @bind="selectedLocationId">
			@foreach (var location in locations)
			{
				<option value="@location.Id">@location.Name</option>
			}
		</select>

		<div>
			<button class="btn btn-primary" type="button" @onclick="DetailedButtonClicked">PDF</button>
			<button class="btn btn-primary" type="button" @onclick="ExcelButtonClicked">Excel</button>
		</div>
	</div>
</div>

<style>
	.container {
		max-width: 1200px;
		margin: 2rem auto;
		padding: 20px;
		display: flex;
		flex-direction: column;
		justify-content: center;
	}

	.container-bottom {
		max-width: 1200px;
		gap: 1rem;
		margin: 2rem auto;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}

	.grid {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: 1rem;
		margin-bottom: 1.5rem;
	}

	.btn {
		margin: 15px;
	}

	input[type="date"],
	input[type="time"],
	input[type="number"],
	select {
		padding: 0.5rem;
		border: 1px solid #cbd5e0;
		border-radius: 4px;
		font-size: 1rem;
	}

	input[readonly] {
		background-color: #f7fafc;
		text-align: right;
	}

	.accordion-content {
		padding: 1rem;
		background-color: #f8fafc;
		border-radius: 4px;
	}

	.e-accordion {
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
		margin-bottom: 1rem;
	}

	.form-row {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: 1rem;
		margin-bottom: 1rem;
	}

	.form-group {
		display: block;
	}

		.form-group label {
			display: block;
			margin-bottom: 0.5rem;
		}

		.form-group input {
			width: 100%;
			text-align: right;
		}

	/* Desktop styles */
	@@media (min-width: 768px) {
		.form-row {
			grid-template-columns: repeat(2, 1fr);
			gap: 2rem;
		}

		.form-group {
			display: flex;
			justify-content: space-between;
			align-items: center;
			gap: 1rem;
		}

			.form-group label {
				margin-bottom: 0;
				white-space: nowrap;
				flex-shrink: 0;
			}

			.form-group input {
				width: 150px;
			}

		.form-select-sm {
			width: 150px;
		}
	}
</style>